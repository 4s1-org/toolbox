stages:
  - validate

variables:
  SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar' # Defines the location of the analysis task cache
  GIT_DEPTH: '0' # Tells git to fetch all the branches of the project, required by the analysis task

sonarcloud-check:
  stage: validate
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: ['']
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - .sonar/cache
  script:
    - curl --output tsconfig.root.json "https://gitlab.com/4s1/ts-config/-/raw/main/tsconfig-es2020-commonjs.json"
    - sed -i "s|@4s1/ts-config/tsconfig-es2020-commonjs.json|./tsconfig.root.json|" tsconfig.json
    - sonar-scanner
  only:
    - merge_requests
    - main

validate-job:
  stage: validate
  image: registry.gitlab.com/4s1/docker/node:14-alpine-dev
  cache:
    key: '$CI_COMMIT_REF_SLUG'
    paths:
      - .pnpm-store
  before_script:
    # Access to private packages
    - echo "//gitlab.com/api/v4/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc
  script:
    - pnpm i
    - pnpm run lint
    - pnpm run build
    - pnpm run test
